
/*  This is an simple game based on voting system i nammed it as an wolf killer.
    there are total 7 players in this game from them 3 are wolf  and other 4 are normal people.
    you need to identify from 7 players that who is the wolf. on that bases voting is done.
    Here all the players need to give his/her vote to kill the enemy the person who got maximum votes will die.
    and if all the ememies were died then the good team will win otherwise the evil teem will win.
*/
//declaration of classes
#include<iostream>
#include<cstdlib>
#include<algorithm>
#include<windows.h>
#include<mmsystem.h>
#include<iomanip>
using namespace std;
class Kill;
class Vote;
class Game{

public:
   // int no_of_players;
   int temp=7;
char arr[7];
    int n=7;
int no_of_players=7;
//Start function will just print NAME of game
    void Start()
    {
        cout<<"                        *********************************************************"<<endl;
        cout<<"                        -------------------------WOLFKILLER----------------------"<<endl;
        cout<<"                        *********************************************************"<<endl;
        cout<<"\nGAME STARTED...\n";
       // PlaySoundA("gamesound.wav" ,NULL, SND_FILENAME | SND_ASYNC);
    }
//Body function will initialize the array
    void body()
    {
               arr[0]='E';
        arr[3]='E';
        arr[6]='E';
        arr[1]='G';
        arr[2]='G';
        arr[4]='G';
        arr[5]='G';
       //  random_shuffle(&arr[0],&arr[7]);
    }
//This function is for seeing who is enemy and who is good team member
    void show()
    {
        for(int i=0;i<n;i++)
        {
            if(i>7)
                break;
                else
                {
            cout<<"Players "<<"--->"<<arr[i]<<endl;
                }
        }
    }



};

//DEFINITION of class Vote
class Vote:public Game{
public:
    int vot[7];
    int dead[7]={0};
  //  n=no_of_players;
//  lebel:
//vote function will take votes
    void vote()
    {
        cout<<"Enter the id of person you think is wolf:";

            for(int i=0;i<temp;i++)
            {
            cin>>vot[i];
            dead[vot[i]-1]++;

            }

    }

//sho function will just print the values of dead array
void sho()
    {
        cout<<"NUMBERS OF VOTES ARE : "<<endl;
        for(int i=0;i<n;i++)
        {
        cout<<dead[i];
        cout<<endl;
        }

    }


};

//Definition of class kill
class Kill:public Vote{
public:

//int coun[10];
   int players=no_of_players;

//compare function will kill the most voted person
  int compare()
   {

	  int index=0,no1=0,no2=0;
	  for (int j=0;j<players;j++)
	  {
		if(no1<=dead[j])
		{
		    //cout<<"\n "<<dead[index]<<" "<<no1<<" "<<no2;
		    index=j;
		    no2=no1;
		    no1=dead[index];
		    //no1=dead[index];
		    //no2=no1;
		    // cout<<"\n "<<dead[index]<<" "<<no1<<" "<<no2;
		}
	  }
	  if(no1==no2)
      {
          //cout<<no1<<no2<<"**************************************";
          cout<<"\nNo one died because of the tie .voting starts again...!"<<endl;
          return 0;

      }
	  if(arr[index]=='E')
                  {
                      arr[index]='0';
                      //vot[index]=0;
                      cout<<"YEAH!we killed an Enemy..."<<endl<<endl;
                      temp-=1;
                  }
	   else
                  {
                      arr[index]='0';
                      //vot[index]=0;
                      cout<<"BAD LUCK GOOD TEAM MEMBER DIED"<<endl;
                      temp-=1;
          	  }
       for(int i=0;i<n;i++)
       {
          dead[i]=0;
          vot[i]=0;
       }
    return 0;

   }

// All the calling and disision will be made in process function
void Process()
{       body();
while(1)
{
        vote();
        cout<<endl;
        //show();
        sho();
        cout<<endl;
        compare();
        int k=0;
        int flag=0;
        int gd=0,en=0;
        for(int i=0;i<7;i++)
        {
            if(arr[i]=='0')
            {
                k++;
            }
            else
            {
                if(arr[i]=='E')
                    en+=1;
                else if(arr[i]=='G')
                    gd+=1;

            }
            if(k==5)
            {
                if(en>=gd)
                {
                cout<<"\nOops!!!.. \nEnimies "<<"Won the game\n."<<endl;
                flag=1;
                break;
                }
                else
                {
                    cout<<"\nYehh.. \nGood team members "<<"Won the game\n."<<endl;
                    PlaySoundA("gamesound.wav" ,NULL, SND_FILENAME | SND_ASYNC);
                    flag=1;
                }
            }

        }
        if(flag==1)
            {
                break;
            }
}
}

};

//Definition of Mne function
//for mimesweeper game
//Definition of wol function
//for WOLFKILLER game
  void Wol(){
   system("color 2");
   // Game g;
   Kill k;
   system("cls");


    k.Start();
   k.Process();
   int play=0;
   cout<<"Do you want to play game again?"<<endl;
   cout<<"if you want to play again press 1::";
   cin>>play;
   if(play ==1)
   {
       for(int i=0;i<7;i++)
       {
       k.body();
       }
       random_shuffle(&k.arr[0],&k.arr[6]);
      Wol();
   }
   else{
       cout<<"\nGAME OVER..."<<endl;
        exit(1);}



}

//main function
int main()
{
     int starter=0;
    cout<<"\t\t\t\t\t^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n ";
    cout<<"\t\t\t\t\t       WELCOME TO ++GAMES         \n ";
    cout<<"\t\t\t\t\t^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n ";
    cout<<endl;
    cout<<"1. WOLFKILLER\n"<<endl;
    cout<<"Enter 1  to play WOLFKILLER\nEnter 0 for exit"<<endl;
    cin>>starter;
    cout<<endl;
    if(starter==1)
    {
        Wol();
    }

    else
    {
        cout<<"WRONGE INPUT\nPLEASE TRY AGAIN..."<<endl;
    }
    return 0;
}

